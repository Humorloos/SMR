import os

from smr.consts import ADDON_PATH
from smr.dto.topiccontentdto import TopicContentDto
from smr.dto.xmindfiledto import XmindFileDto
from smr.dto.xmindtopicdto import XmindTopicDto
from smr.fieldtranslator import class_from_content, relation_class_from_content

SUPPORT_PATH = os.path.join(ADDON_PATH, 'tests', 'support')
RESOURCES_PATH = os.path.join(ADDON_PATH, 'resources')

# New media
NEW_MEDIA_NAME = '环境很好。.mp3'
PATH_NEW_MEDIA_ORIGINAL = os.path.join(SUPPORT_PATH, NEW_MEDIA_NAME)

# smr worlds
SMR_WORLD_DIRECTORY = os.path.join(SUPPORT_PATH, 'smr_world')
# smr world for tests
SMR_WORLD_CSV_DIRECTORY = os.path.join(SMR_WORLD_DIRECTORY, 'csv')
# xmind files
TEST_FILE_DIRECTORY = 'mypath'
TEST_FILE_NAME = 'test_file'
TEST_FILE_MAP_LAST_MODIFIED = 1594823958217
TEST_FILE_FILE_LAST_MODIFIED = 1594823958.8585837
TEST_DECK_ID = 1579442668731
TEST_XMIND_FILE = XmindFileDto(directory=TEST_FILE_DIRECTORY, file_name=TEST_FILE_NAME,
                               map_last_modified=TEST_FILE_MAP_LAST_MODIFIED,
                               file_last_modified=TEST_FILE_FILE_LAST_MODIFIED, deck_id=TEST_DECK_ID)
# xmind sheets
TEST_SHEET_ID = 'sheet id'
# xmind edges
TEST_RELATION_EDGE_ID = 'edge id'
TEST_EDGE_TITLE = 'edge title'
TEST_EDGE_IMAGE = 'edge image'
TEST_EDGE_MEDIA = 'edge media'
TEST_EDGE_LAST_MODIFIED = 1578313461243
TEST_EDGE_ORDER_NUMBER = 1
TEST_XMIND_EDGE = XmindTopicDto(node_id=TEST_RELATION_EDGE_ID, sheet_id=TEST_SHEET_ID, title=TEST_EDGE_TITLE,
                                image=TEST_EDGE_IMAGE, link=TEST_EDGE_MEDIA,
                                last_modified=TEST_EDGE_LAST_MODIFIED, order_number=TEST_EDGE_ORDER_NUMBER)
# xmind nodes
TEST_CONCEPT_NODE_ID = 'node id'
TEST_NODE_TITLE = 'node title'
TEST_NODE_IMAGE = 'node image'
TEST_NODE_MEDIA = 'node media'
TEST_NODE_LAST_MODIFIED = 1578314907411
TEST_NODE_ORDER_NUMBER = 1
TEST_XMIND_NODE = XmindTopicDto(node_id=TEST_CONCEPT_NODE_ID, sheet_id=TEST_SHEET_ID, title=TEST_NODE_TITLE,
                                image=TEST_NODE_IMAGE, link=TEST_NODE_MEDIA,
                                last_modified=TEST_NODE_LAST_MODIFIED, order_number=TEST_NODE_ORDER_NUMBER)
TEST_FILE_PATH = os.path.join(TEST_FILE_DIRECTORY, TEST_FILE_NAME + '.xmind')
TEST_CONCEPT_CLASS_NAME = 'test_concept'
TEST_CONCEPT_2_NODE_ID = 'node id2'
TEST_CONCEPT_2_CLASS_NAME = 'test_concept2'
TEST_RELATION_CLASS_NAME = 'test_relation'

# smr world with example map
ORIGINAL_SMR_WORLD_WITH_EXAMPLE_MAP_PATH = os.path.join(
    SMR_WORLD_DIRECTORY, 'smr_world_with_example_map', 'smr_world.sqlite3')

# empty smr world
EMPTY_SMR_WORLD_NAME = 'empty_smr_world.sqlite3'

# collections
TEST_DECK_NAME = "testdeck"
TEST_COLLECTIONS_DIRECTORY = os.path.join(SUPPORT_PATH, 'collections')
# empty collections
EMPTY_COLLECTIONS_DIRECTORY = os.path.join(TEST_COLLECTIONS_DIRECTORY, 'empty')
# session
TEMPORARY_EMPTY_COLLECTION_SESSION_PATH = os.path.join(
    EMPTY_COLLECTIONS_DIRECTORY, 'temporary_session', 'empty_smr_col_session.anki2')
# function
TEMPORARY_EMPTY_COLLECTION_FUNCTION_NAME = 'empty_smr_col_function'
TEMPORARY_EMPTY_COLLECTION_FUNCTION_DIRECTORY = os.path.join(EMPTY_COLLECTIONS_DIRECTORY, 'temporary_function')
TEMPORARY_EMPTY_COLLECTION_FUNCTION_PATH = os.path.join(TEMPORARY_EMPTY_COLLECTION_FUNCTION_DIRECTORY,
                                                        TEMPORARY_EMPTY_COLLECTION_FUNCTION_NAME + '.anki2')
TEMPORARY_EMPTY_COLLECTION_FUNCTION_MEDIA = os.path.join(TEMPORARY_EMPTY_COLLECTION_FUNCTION_DIRECTORY,
                                                         TEMPORARY_EMPTY_COLLECTION_FUNCTION_NAME + '.media')
# collections with example map
EXAMPLE_MAP_COLLECTION_DIRECTORY = os.path.join(TEST_COLLECTIONS_DIRECTORY, 'with_example_map')
# default
DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(EXAMPLE_MAP_COLLECTION_DIRECTORY, 'default')
DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
                                                        DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
                                                         DEFAULT_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
NEUROTRANSMITTERS_IMAGE_ANKI_FILE_NAME = 'attachments09r2e442o8lppjfeblf7il2rmd.png'
# with changes
CHANGED_EXAMPLE_MAP_COLLECTION_DIRECTORY = os.path.join(EXAMPLE_MAP_COLLECTION_DIRECTORY, 'changed')
# default
DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    CHANGED_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'default')
DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY, DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY, DEFAULT_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
NEW_IMAGE_NAME = 'paste-cbf726a37a2fa4c403412f84fd921145335bd0b0.jpg'
# temporary
TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    CHANGED_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'temporary')
TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'changed_col_with_example_map'
TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_CHANGED_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
# added answer for warning
NEW_ANSWER_EXAMPLE_MAP_COLLECTION_DIRECTORY = os.path.join(EXAMPLE_MAP_COLLECTION_DIRECTORY, 'new_answer')
# default
DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    NEW_ANSWER_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'default')
DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    DEFAULT_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
# temporary
TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    NEW_ANSWER_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'temporary')
TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_NEW_ANSWER_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
# added answer for warning
REMOVED_CENTER_NODE_EXAMPLE_MAP_COLLECTION_DIRECTORY = os.path.join(
    EXAMPLE_MAP_COLLECTION_DIRECTORY, 'removed_center_node')
# default
DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    REMOVED_CENTER_NODE_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'default')
DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    DEFAULT_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
# temporary
TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY = os.path.join(
    REMOVED_CENTER_NODE_EXAMPLE_MAP_COLLECTION_DIRECTORY, 'temporary')
TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME = 'collection'
TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_PATH = os.path.join(
    TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.anki2')
TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_MEDIA = os.path.join(
    TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_DIRECTORY,
    TEMPORARY_REMOVED_CENTER_NODE_COLLECTION_WITH_EXAMPLE_MAP_NAME + '.media')
# Collection version 0.0.1 for migration
ORIGINAL_COLLECTION_VERSION_001_PATH = os.path.join(
    TEST_COLLECTIONS_DIRECTORY, 'version_0.0.1', 'original', 'collection.anki2')

# maps
MAPS_DIRECTORY = os.path.join(SUPPORT_PATH, 'maps')
NAME_EXAMPLE_MAP = 'example map'
EXAMPLE_MAP_N_EDGES = 34
NAME_MAP_GENERAL_PSYCHOLOGY = 'example_general_psychology'
NAME_HYPERLINK_MEDIA = 'serotonin.mp3'
NEUROTRANSMITTERS_IMAGE_XMIND_URI = 'attachments/09r2e442o8lppjfeblf7il2rmd.png'
# original in support
DIRECTORY_MAPS_ORIGINAL = os.path.join(MAPS_DIRECTORY, 'original')
# question without answer
NAME_MAP_QUESTION_WITHOUT_ANSWERS = 'question_without_answers'
PATH_MAP_QUESTION_WITHOUT_ANSWERS = os.path.join(DIRECTORY_MAPS_ORIGINAL, NAME_MAP_QUESTION_WITHOUT_ANSWERS + '.xmind')
# edge with too many child nodes
NAME_MAP_TOO_MANY_ANSWERS = 'question_with_too_many_answers'
PATH_MAP_TOO_MANY_ANSWERS = os.path.join(DIRECTORY_MAPS_ORIGINAL, NAME_MAP_TOO_MANY_ANSWERS + '.xmind')
# original
PATH_EXAMPLE_MAP_ORIGINAL = os.path.join(RESOURCES_PATH, NAME_EXAMPLE_MAP + '.xmind')
PATH_MAP_GENERAL_PSYCHOLOGY_ORIGINAL = os.path.join(RESOURCES_PATH, NAME_MAP_GENERAL_PSYCHOLOGY + '.xmind')
PATH_HYPERLINK_MEDIA_ORIGINAL = os.path.join(RESOURCES_PATH, NAME_HYPERLINK_MEDIA)
# default
DIRECTORY_MAPS_DEFAULT = os.path.join(MAPS_DIRECTORY, 'no_changes')
PATH_EXAMPLE_MAP_DEFAULT = os.path.join(DIRECTORY_MAPS_DEFAULT, NAME_EXAMPLE_MAP + '.xmind')
PATH_MAP_GENERAL_PSYCHOLOGY_DEFAULT = os.path.join(DIRECTORY_MAPS_DEFAULT, NAME_MAP_GENERAL_PSYCHOLOGY + '.xmind')
PATH_HYPERLINK_MEDIA_DEFAULT = os.path.join(DIRECTORY_MAPS_DEFAULT, NAME_HYPERLINK_MEDIA)
# changed
NAME_NEW_PSYCHOLOGY = 'new_psychology'
DIRECTORY_MAPS_CHANGED = os.path.join(MAPS_DIRECTORY, 'changes')
PATH_EXAMPLE_MAP_CHANGED = os.path.join(DIRECTORY_MAPS_CHANGED, NAME_EXAMPLE_MAP + '.xmind')
PATH_MAP_GENERAL_PSYCHOLOGY_CHANGED = os.path.join(DIRECTORY_MAPS_CHANGED, NAME_MAP_GENERAL_PSYCHOLOGY + '.xmind')
PATH_MAP_NEW_PSYCHOLOGY = os.path.join(DIRECTORY_MAPS_CHANGED, NAME_NEW_PSYCHOLOGY + '.xmind')
PATH_HYPERLINK_MEDIA_CHANGED = os.path.join(DIRECTORY_MAPS_CHANGED, NAME_HYPERLINK_MEDIA)
PATH_NEW_MEDIA_CHANGED = os.path.join(DIRECTORY_MAPS_CHANGED, NEW_MEDIA_NAME)
# temporary
DIRECTORY_MAPS_TEMPORARY = os.path.join(MAPS_DIRECTORY, 'temporary')
PATH_EXAMPLE_MAP_TEMPORARY = os.path.join(DIRECTORY_MAPS_TEMPORARY, NAME_EXAMPLE_MAP + '.xmind')
PATH_MAP_GENERAL_PSYCHOLOGY_TEMPORARY = os.path.join(DIRECTORY_MAPS_TEMPORARY, NAME_MAP_GENERAL_PSYCHOLOGY + '.xmind')
PATH_HYPERLINK_MEDIA_TEMPORARY = os.path.join(DIRECTORY_MAPS_TEMPORARY, NAME_HYPERLINK_MEDIA)
PATH_NEW_MEDIA_TEMPORARY = os.path.join(DIRECTORY_MAPS_TEMPORARY, NEW_MEDIA_NAME)
# content xmls
NAME_CONTENT = 'content.xml'
DIRECTORY_CONTENT = os.path.join(MAPS_DIRECTORY, 'xml')
# example map
PATH_CONTENT_EXAMPLE_MAP = os.path.join(DIRECTORY_CONTENT, 'example_map', NAME_CONTENT)
# map general psychology
PATH_CONTENT_GENERAL_PSYCHOLOGY = os.path.join(DIRECTORY_CONTENT, 'general_psychology', NAME_CONTENT)

# absent file
ABSENT_XMIND_FILE_PATH = os.path.join(SUPPORT_PATH, 'absent_file.xmind')
# IDs
# sheets
BIOLOGICAL_PSYCHOLOGY_SHEET_ID = '2485j5qgetfevlt00vhrn53961'
CLINICAL_PSYCHOLOGY_SHEET_ID = '1bt0u8ahp0p8d41j6pto2d9q8t'
NEW_SHEET_SHEET_ID = '1n45ja8a68noq3hkfp6an49q4f'
# nodes
SEROTONIN_1_NODE_ID = '122vli15fp65smkg4v6pq54gi3'
BIOLOGICAL_PSYCHOLOGY_NODE_ID = '0pbme7b9sg9en8qqmmn9jj06od'
CLINICAL_PSYCHOLOGY_1_NODE_ID = '29qkib9g6gqsfqqmcqk2495kgc'
BIOGENIC_AMINES_1_NODE_ID = '78k8nsh3vfibpmq73kangacbll'
DE_EMBEDDED_MEDIA_NODE_ID = '23nu73chqkkkem455dit5p8stu'
SLEEP_NODE_ID = '519eu5jr1jkn93s5hmsscvm84i'
PAIN_1_NODE_ID = '3nb97928e68dcu5512pft7gkcg'
PSYCHOLOGICAL_DISORDERS_NODE_ID = '0oh5dkl1rtd8qrv7sv6p67fl57'
PAIN_2_NODE_ID = '5asru7kdmre8059cemi8p5lm3v'
MAO_1_NODE_ID = '7qb9l39bs8p1b0ivvausne94q4'
MAO_2_NODE_ID = '7blr5ubl6uf6c9beflm85jte19'
CAN_BE_TRIGGERED_BY_NODE_ID = '7ite3obkfmbchr1pc6ib0o7rga'
NOCICEPTORS_NODE_ID = '2mbb2crv3tdgr131i9j538n0ga'
CHEMICAL_NODE_ID = '2jf5kkori2h7sdja7cgje5i71e'
SEROTONIN_2_NODE_ID = '56ru8hj8k8361ppfrftrbahgvv'
DOPAMINE_NODE_ID = '03eokjlomuockpeaqn2923nvvp'
ADRENALINE_NODE_ID = '3f5lmmd8mjhe3gkbnaih1m9q8j'
NORADRENALINE_NODE_ID = '73mo29opsuegqobtttlt2vbaqj'
BIOGENIC_AMINES_2_NODE_ID = '3oqcv5qlqhn28u1opce5i27709'
MAO_3_NODE_ID = '725pgmukesg0vqmof25tfm132n'
VIRTUE_NODE_ID = '4q85gj7gitu8b8b54usvbdffv9'
MULTIPLE_PARENTS_NODE_IDS = [SEROTONIN_2_NODE_ID, DOPAMINE_NODE_ID, ADRENALINE_NODE_ID, NORADRENALINE_NODE_ID]
AFFECTS_MULTIPLE_CHILDREN_NODE_IDS = [SLEEP_NODE_ID, PAIN_1_NODE_ID, PSYCHOLOGICAL_DISORDERS_NODE_ID]
# edges
INVESTIGATES_EDGE_ID = '4kdqkutdha46uns1j8jndi43ht'
TYPES_EDGE_ID = '485fcs7jl72gtqesace4v8igf0'
EXAMPLE_IMAGE_EDGE_ID = '08eq1rdricsp1nt1b7aa181sq4'
AFFECTS_EDGE_ID = '4lrqok8ac9hec8u2c2ul4mpo4k'
PRONOUNCIATION_EDGE_ID = '4s27e1mvsb5jqoiuaqmnlo8m71'
DIFFERENCE_EDGE_ID = '077tf3ovn4gc1j1dqte7or33fl'
SPLITS_UP_EDGE_ID = '61irckf1nloq42brfmbu0ke92v'
ARE_EDGE_ID = '6iivm8tpoqj2c0euaabtput14l'
CONSIST_OF_EDGE_ID = '0eaob1gla0j1qriki94n2os9oe'
MODULATED_BY_EDGE_ID = '7avqd95hi5tvj0kjcg2lne603g'
EXAMPLE_EDGE_ID = '7e1s0urn8376a2q371nujihuab'
STANDS_FOR_EDGE_ID = '351v1hg3rt5vejrq10c1p3tko0'
EMPTY_EDGE_3_ID = '668iln3nrlmk5ibhnf4lvbbnmo'
TRIGGERED_BY_EDGE_ID = '4rdraflh6n2hl4a459g2urdkr6'
CAN_BE_EDGE_ID = '4q3e21ritrvitgmjialvadn2m6'
COMPLETELY_UNRELATED_ANIMATION_EDGE_ID = '4vfsmbd1fmn6s0tqmlj4cei7pe'
# edges from smr_world
EDGE_WITH_MEDIA_XMIND_ID = '7ite3obkfmbcasdf12asd123ga'
# edge from xmind test file

# nodes
INFORMATION_TRANSFER_AND_PROCESSING_NODE_ID = '4okvq29odoin406qmiq86vv1i1'
PERCEPTION_NODE_ID = '4jf2lp878e4rn7pm85lca1vahr'
NEUROTRANSMITTERS_NODE_ID = '4r6avbt0pbuam4fg07jod0ubec'
SEROTONIN_MEDIA_HYPERLINK_NODE_ID = '1s7h0rvsclrnvs8qq9u71acml5'
EMPTY_NODE_ID = '6b0ho6vvcs4pcacchhsgju7513'
ONE_OR_MORE_AMINE_GROUPS_NODE_ID = '0s0is5027b7r6akh3he0nbu478'
ENZYMES_NODE_ID = '5e2cicue01ikp5vnq5pp46np83'
NEUROTRANSMITTERS_IMAGE_ATTACHMENT_NAME = 'attachments/629d18n2i73im903jkrjmr98fg.png'
NEUROTRANSMITTERS_NODE_CONTENT = TopicContentDto(image=NEUROTRANSMITTERS_IMAGE_ATTACHMENT_NAME,
                                                 title='neurotransmitters')
# topic content dtos
ARE_EDGE_CONTENT = TopicContentDto(title='are')
# Media hyperlink path as saved in content.xml, replace backslash with slash, since xmind saves paths with slashes
UNIX_HYPERLINK_MEDIA_PATH = PATH_HYPERLINK_MEDIA_TEMPORARY.replace('\\', '/')
MEDIA_HYPERLINK_NODE_CONTENT = TopicContentDto(media=PATH_HYPERLINK_MEDIA_TEMPORARY)
DE_ATTACHMENT_NAME = 'attachments/395ke7i9a6nkutu85fcpa66as2.mp4'
MEDIA_ATTACHMENT_NODE_CONTENT: TopicContentDto = TopicContentDto(media=DE_ATTACHMENT_NAME)
NEUROTRANSMITTERS_CLASS_NAME = 'neurotransmittersximage_629d18n2i73im903jkrjmr98fg_extension_png'

EDGE_FOLLOWING_MULTIPLE_NOTES_FOREIGN_NOTE_PICKLE = \
    b'\x80\x04\x95\xff\x02\x00\x00\x00\x00\x00\x00\x8c\x16anki.importing.noteimp\x94\x8c\x0bForeignNote\x94\x93\x94' \
    b')\x81\x94}\x94(\x8c\x06fields\x94]\x94(\x8c\xc4biological psychology<li>investigates: information transfer and ' \
    b'processing</li><li>modulated by: enzymes</li><li>example: MAO</li><li>splits up: Serotonin, dopamine, ' \
    b'adrenaline, noradrenaline</li>\x94\x8c\x03are\x94\x8c\x0fbiogenic ' \
    b'amines\x94\x8c\x00\x94h\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\n\x8c\t|{|{{{|\x7f{' \
    b'\x94e\x8c\x04tags\x94]\x94(\x8c  Example::test_file::test_sheet ' \
    b'\x94\x8c\x1a6iivm8tpoqj2c0euaabtput14l\x94e\x8c\x04deck\x94N\x8c\x05cards\x94}\x94K\x01h\x00\x8c\x0bForeignCard' \
    b'\x94\x93\x94)\x81\x94}\x94(\x8c\x03due\x94K\x00\x8c\x03ivl\x94K\x01\x8c\x06factor\x94M\xc4\t\x8c\x04reps\x94K' \
    b'\x00\x8c\x06lapses\x94K\x00ubs\x8c\tfieldsStr\x94\x8c\xf5biological psychology<li>investigates: information ' \
    b'transfer and processing</li><li>modulated by: enzymes</li><li>example: MAO</li><li>splits up: Serotonin, ' \
    b'dopamine, adrenaline, noradrenaline</li>\x1fare\x1fbiogenic ' \
    b'amines\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f|{|{{{|\x7f{\x94ub.'
EDGE_FOLLOWING_MULTIPLE_NODES_NOTE_ID = 12345
MULTIPLE_PARENTS_CONTENTS = [TopicContentDto(title=i) for i in ['Serotonin', 'dopamine', 'adrenaline', 'noradrenaline']]
MULTIPLE_PARENTS_CLASS_NAMES = [class_from_content(i) for i in MULTIPLE_PARENTS_CONTENTS]
MULTIPLE_PARENTS_CHILD_CONTENT = TopicContentDto(title='biogenic amines')
MULTIPLE_PARENTS_CHILD_CLASS_NAME = class_from_content(MULTIPLE_PARENTS_CHILD_CONTENT)
MULTIPLE_PARENTS_CHILD_NODE_ID = '3oqcv5qlqhn28u1opce5i27709'
MULTIPLE_PARENTS_RELATION_CLASS_NAME = relation_class_from_content(ARE_EDGE_CONTENT)
